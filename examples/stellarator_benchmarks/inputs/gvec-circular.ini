!================================================================================================================================= !
! GVEC PARAMETERFILE 
! GVEC v0.7.dev
!================================================================================================================================= !
! compute initial solution from existing equilibrium
!================================================================================================================================= !

ProjectName = SIMSOPT-GVEC-TEMPLATE

whichInitEquilibrium = 0 ! 0: only from input parameters, 
                         
init_fromBConly = T ! T: only use axis and boundary for X1,X2 (True is default) 
                    ! F: only needed if VMEC data is used, interpolate on full mesh s=0...1
init_LA        = T  ! T: compute lambda from initial mapping (default),  F: lambda=0 at initialization 

!================================================================================================================================= !
! visualization
!================================================================================================================================= !

which_visu = 0        ! 0: visualize gvec data, 1: visualize vmec data (needs whichInitEquilibrium=1)

!================================================================================================================================= !
! grid in s direction
!================================================================================================================================= !

sgrid_nElems=9
sgrid_grid_type=4  ! 0: uniform, 1: sqrt (finer at edge), 2: s^2 (finer at axis), 3: bump (fine at axis&edge), 4: uniform at axis, finer at edge

!================================================================================================================================= !
! discretization parameters
!================================================================================================================================= !

which_hmap = 1          ! type of global mapping h between (X1,X1,zeta)->(x,y,z), 1: torus coordinates (R=X1,Z=X2,phi=-zeta), 2: cylinder(axis in y), 10: knot
nfp = 1                 ! number of filed periods (overwritten when initializing from VMEC file)

degGP  = 8              ! number of gauss points per radial spline element , must be > X1X2_deg,LA_deg
fac_nyq = 4             ! nyquist factor: to compute number of integration points in (theta,zeta), :mn_nyq=fac_nyq * max(mn_max (all variables)) 

X1X2_deg  = 5           ! polynomial degree in radial discretization for X1 and X2 variable
X1_mn_max = (/2, 2/)    ! X1 variable: maximum fourier mode number (m_max,n_max) (if initializing from VMEC file, this would overwrite the VMEC resolution)
X1_sin_cos = _cos_      ! X1 variable: which fourier modes: can be either _sin_,_cos_, or _sincos_ (if initializing from VMEC file, this would overwrite the VMEC VMEC setting)
X2_mn_max = (/2, 2/)    ! X2 variable: maximum fourier mode number (m_max,n_max) (if initializing from VMEC file, this would overwrite the VMEC resolution)
X2_sin_cos = _sin_      ! X2 variable: which fourier modes: can be either _sin_,_cos_, or _sincos_ (if initializing from VMEC file, this would overwrite the VMEC VMEC setting) 

LA_deg    = 5           ! polynomial degree in radial discretization for Lambda variable
LA_continuity = 4       ! continuity of the radial discretization (-1: discontinuous, deg-1: spline (default)) 
LA_mn_max = (/2, 2/)    ! lambda variable: maximum fourier mode number (m_max,n_max) (if initializing from VMEC file, this would overwrite the VMEC resolution)
LA_sin_cos = _sin_      ! lamda variable: which fourier modes: can be either _sin_,_cos_, or _sincos_ (if initializing from VMEC file, this would overwrite the VMEC VMEC setting)

init_average_axis = T   ! initialize the magnetic axis position from the average of the boundary points

!================================================================================================================================= !
! fourier modes at the edge boundary condition
! FORMAT AA_X_ccc( M; N) with AA: X1,X2 , X=a/b (axis/edge) 
!                             ccc: cos/sin, ( M; N) without NFP with any number of whitespaces: (  0;  0) ( 1; 0) ( -1; -2) 
! modes which are not specified here are set to zero!!!
!================================================================================================================================= !
!boundary m;n modes

X1_b_cos(0;0) = 1.0

X1_b_cos(0;1) = 0.1
X2_b_sin(0;1) = 0.1

X1_b_cos(1;0) = 0.1
X2_b_sin(1;0) = 0.1

!================================================================================================================================= !
! profiles
!================================================================================================================================= !
sign_iota = 1
iota_coefs = (/ 1.0, 0.0, 0.0 /) !(a,b,c) : iota(phi_norm)=a+b*phi_norm+c*phi_norm^2 ...             phi_norm: normalized tor.flux
pres_coefs = (/ 1.0, 0. /)
pres_scale = 1500.

PHIEDGE    =  0.0314159265359               ! torodial flux at the last flux surface

!================================================================================================================================= !
! iteration
!================================================================================================================================= !
MaxIter = 100            ! maximum number of iterations
start_dt = 0.5             ! first timestep, is automatically adapted
minimize_tol = 1.0e-6      ! relative tolerance |Force|^2<reltol*|Force(u0)|^2
outputIter = 100          ! number of iterations after which a state & visu is written
logIter = 10             ! write log of iterations to screen and logfile 

PrecondType =  1         ! Gradient descent Preconditioner:  -1: off(default), 1: on
MinimizerType = 10       ! 0: gradient descent, 10: accelerated GD

!================================================================================================================================= !
