[metadata]
name = simsopt
description: Framework for optimizing stellarators
long-description = file: README.md
long-description_content_type = text/markdown
version = 0.0.4
license = GNU Lesser General Public License Version 3
license-file = file: COPYING, COPYING.LESSER
author = "Matt Landreman, Florian Wechsung, Bharat Medasani"
author_email = "mattland@umd.edu, wechsung@nyu.edu, mbkumar@gmail.com"
maintainer = "Bharat Medasani"
maintainer_email = "mbkumar@gmail.com"
url = https://github.com/hiddenSymmetries/simsopt
download_url = https://test.pypi.org/project/simsopt
project_urls = 
    Bug Tracker = https://github.com/hiddenSymmetries/simsopt/issues
    Documentation = https://hiddensymmetries.github.io/simsopt
    Source Code = https://github.com/hiddenSymmetries/simsopt/archive/master.zip
classifier =
    Development Status :: 3 - Alpha
    Intended Audience :: Science/Research
    Topic :: Scientific/Engineering :: Physics
    License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)
    Operating System :: MacOS :: MacOS X
    Operating System :: POSIX :: Linux
    Environment :: Console
    Programming Language :: Python :: 3 :: Only
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
keywords = 
    plasma physics
    mhd
    nuclear fusion reactor
    stellarator
    vmec
    spec
    optimization

[options]
install_requires = 
    numpy >= v1.19.0
    monty >= v4.0.0
    jax >= 0.2.4
    jaxlib >= 0.1.56
    scipy >= 1.5.4
package_dir =
    =src
packages = find:

[options.extras_require]
SPEC =
    py_spec >= 3.0.1
    pyoculus >= 0.1.1
    h5py >= 3.1.0
    f90nml >= 1.2
MPI =
    mpi4py >= 3.0.3

[options.packages.find]
where = src

[options.package_data]
* =
    input.default
    defaults.sp

[options.data_files]
. = CMakeLists.txt, COPYING, COPYING.LESSER, requirements.txt, pyproject.toml
cmake = cmake/FindNumPy.cmake
#third_party = third_party/*
examples = 
    examples/1DOF_Garabedian.sp
    examples/2DOF_targetIotaAndVolume.sp
    examples/spec00000.sp
    examples/input.1DOF_Garabedian                                                
    examples/input.2DOF_circularCrossSection_varyAxis_targetIotaAndQuasisymmetry  
    examples/input.2DOF_vmecOnly_targetIotaAndVolume                              
    examples/input.stellopt_scenarios_7dof                                        
    examples/demo
    examples/demo2
    examples/stellopt_scenarios_1DOF_circularCrossSection_varyAxis_targetIota
    examples/stellopt_scenarios_1DOF_circularCrossSection_varyAxis_targetIota_spec
    examples/stellopt_scenarios_1DOF_circularCrossSection_varyR0_targetVolume
    examples/stellopt_scenarios_1DOF_circularCrossSection_varyR0_targetVolume_spec
    examples/stellopt_scenarios_2DOF_circularCrossSection_varyAxis_targetIotaAndQuasisymmetry
    examples/stellopt_scenarios_2DOF_specOnly_targetIotaAndVolume
    examples/stellopt_scenarios_2DOF_vmecAndSpec
    examples/stellopt_scenarios_2DOF_vmecOnly_targetIotaAndVolume
    examples/stellopt_scenarios_7dof
    examples/simsgeo                                                              
    examples/qsc                                                                  
    examples/stellopt_scenarios_1DOF_circularCrossSection_varyR0_targetVolume.ipynb
    examples/stellopt_scenarios_2DOF_vmecOnly_targetIotaAndVolume.ipynb
    examples/gradientBasedSurfaceOptimization.ipynb                               
    examples/simsgeo.ipynb
examples/VMEC = 
    examples/VMEC/QAS.py
    examples/VMEC/input.QAS
