# First stage
# ===================================
FROM ubuntu:20.04 as intermediate

COPY github_key .

RUN apt update && DEBIAN_FRONTEND=noninteractive  apt-get install -y  python3-dev python3-pip python3-virtualenv build-essential gfortran openmpi-bin libopenmpi-dev libnetcdf-dev libnetcdff-dev libopenblas-dev libscalapack-openmpi-dev  libhdf5-openmpi-dev git m4 libfftw3-dev

RUN mkdir -p /src
RUN eval $(ssh-agent) && \
    ssh-add github_key && \
    ssh-keyscan -H github.com >> /etc/ssh/ssh_known_hosts && \
    git clone --depth 1 git@github.com:PrincetonUniversity/SPEC.git /src/SPEC && \
    cd /src/SPEC   &&  \
    cat Makefile | sed 's/BUILD_ENV=intel/BUILD_ENV=gfortran_ubuntu/' > Makefile1 && \
    cp Makefile1 Makefile && \
    make 

RUN python3 -m pip install wheel "pybind11[global]"  cmake scikit-build ninja 
RUN virtualenv /venv/

RUN /venv/bin/pip install numpy scipy jax jaxlib f90nml h5py pyoculus py_spec mpi4py jupyter notebook ipython qsc sympy
RUN /venv/bin/pip install  git+https://github.com/hiddenSymmetries/booz_xform
RUN python3 -m pip install  git+https://github.com/mbkumar/python-mpi-logger

RUN git clone --depth 1 https://github.com/hiddenSymmetries/VMEC2000.git /src/VMEC && \
    cd /src/VMEC && \
    cp python/machines/ubuntu.json cmake_config_file.json && \
    /venv/bin/pip install  .
RUN /venv/bin/pip install -v "git+https://github.com/hiddenSymmetries/simsopt"


# Second stage
# ===================================
FROM ubuntu:20.04

LABEL maintainer.name="Bharat Medasani" \
      maintainer.email="mbkumar.at.gmail" \
      developers="Hidden Symmetries Team" \
      version="0.04" \
      description="Docker file for simsopt container based on ubuntu image" 

RUN apt update && DEBIAN_FRONTEND=noninteractive  apt-get install -y  python3-dev python3-virtualenv  openmpi-bin  libnetcdf-dev libnetcdff-dev libopenblas-dev libscalapack-openmpi-dev  libhdf5-openmpi-dev m4 libfftw3-dev vim emacs nano git

COPY --from=intermediate /venv /venv
COPY --from=intermediate /src/SPEC/xspec /usr/bin
COPY entrypoint.sh /venv/bin

#env PATH=$PATH:/venv/bin
ENV OMPI_ALLOW_RUN_AS_ROOT=1 OMPI_ALLOW_RUN_AS_ROOT_CONFIRM=1
ENTRYPOINT ["bash", "/venv/bin/entrypoint.sh"]
CMD ["bash"]
